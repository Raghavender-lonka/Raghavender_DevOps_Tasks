pipeline{
    agent any
    stages{

        stage("Checkout"){
          steps{
               checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/Raghavender-lonka/unity_java_demo']])
          }
        }
        
        stage("Test"){
            steps{
                sh 'mvn test'
            }
        }
        

        stage("Build"){
            steps{
                withAWS(credentials: 'AWS_CRED', region: 'us-east-1') {
                sh 'mvn clean package'
                sh 'aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 154100284802.dkr.ecr.us-east-1.amazonaws.com'
                sh 'docker build -t unity_repo_demo .'
                sh "docker tag unity_repo_demo:latest 154100284802.dkr.ecr.us-east-1.amazonaws.com/unity_repo_demo:${BUILD_ID}"
                sh "docker push 154100284802.dkr.ecr.us-east-1.amazonaws.com/unity_repo_demo:${BUILD_ID}"
                }
            }
        }
        
        
        stage("Deploy") {
            steps {
                withAWS(credentials: 'AWS_CRED', region: 'us-east-1') {
                  script {
                    sh ('aws eks update-kubeconfig --region us-east-1 --name unity_cluster_demo')
                    sh  'sed -i "s/UNITY-IMAGE:TAG/unity_repo_demo:${BUILD_ID}/g" deployment.yml'
                    sh 'kubectl apply -f deployment.yml'
                }
                }
        }
    }
    }
}